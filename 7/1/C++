//
//пользователь вводит слово, а программа составляет все варианты слов из букв заданного слова.
//
//программа не оптимизирована (можно ускорить сортировку)
//

#include "std_lib_facilities.h"
#include "windows.h"

int main()
{
	setlocale(LC_ALL, "Russian");
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);

	string str1;
	cout << "Введите слово ";
	cin >> str1;
	int n = 0, x = 1, i = 0;
	while (str1[n] != '\0')
	{
		n++;
		x = x * n;
	}

//преобразование строки в массив типа char
	char *str = new char[n];
	for (i = 0; i < n; i++)
	{
		str[i] = str1[i];
	}

//устранение заглавных букв и смена 'ё' на 'е'
	int *str3 = new int[n];
	for (i = 0; i < n; i++)
	{
		str3[i] = str[i];
	}

	for (i = 0; i < n; i++)
	{
		if (str3[i] == -72 || str3[i] == -88)
		{
			str3[i] = -27;
			str[i] = str3[i];
		}

		if ((str3[i] >= -64) and (str3[i] <= -33))
		{
			str3[i] = str3[i] + 32;
			str[i] = str3[i];
		}
		else
		{
			if ((str3[i] >= 65) and (str3[i] <= 90))
			{
				str3[i] = str3[i] + 32;
				str[i] = str3[i];
			}
		}
	}

//Ввод параллельного массива без повторяющихся символов 
//(т.к. пользователь может ввести слово с повторяющимися символами, и это затруднит комбинирование)
	char *str2 = new char[n];

	for (i = 0; i < n; i++)
	{
		str2[i] = 97 + i;
	}

//техническая составляющая программы
	int *ind = new int[n + 1];
	ind[n] = x;
	ind[0] = 0;
	for (int j = 1; j < n; j++)
	{
		x = x / j;
		ind[n - j] = x;
	}
	int *ind1 = new int[n + 1];
	ind1[0] = ind[0];
	ind1[1] = ind[1];
	for (int j = 2; j <= n; j++)
	{
		ind1[j] = ind[j];
		ind1[j] = ind1[j] + ind1[j - 1];
	}

	x = 0;
	for (int j = 1; j <= n; j++)
	{
		x = x + ind[j];
	}

	cout << "\nКоличество комбинаций без учета повт. символов = " << x << "\n\n";

//составление комбинаций без учета возможных повт. символов в изначальной строке
	string *mas2 = new string[x];
	string *mas1 = new string[x];

	int j, k, t, g, h = 0;

	for (i = 0; i < n; i++)
	{
		for (k = 0; k < (i + 1); k++)
		{
			for (j = ind1[i]; j < ind1[i + 1]; j++)
			{
				if (k > 0 and (mas1[j - 1][k - 1] != mas1[j][k - 1]))
				{
					h = 0;
				}
				t = ((j - ind1[i]) / (ind[i + 1] / ind[k + 1]) + h) % n;
				g = k;
				int t1 = t;
				while (g > 0)
				{
					if (str2[t] == mas1[j][g - 1])
					{
						t = (t + 1) % n;
						g = k;
						h++;
					}
					else
					{
						g--;
					}
				}
				mas2[j] = mas2[j] + str[t];
				mas1[j] = mas1[j] + str2[t];
			}
		}
	}

//проверка на уникальности комбинаций
	bool uniq = true;
	for (i = 0; i < (n - 1); i++)
	{
		for (j = (i + 1); j < n; j++)
		{
			if (str[i] == str[j])
			{
				uniq = false;
			}
		}
	}

//устранение повторений (при их наличии)
	if (uniq == false)
	{
		cout << "\nВыполняется сортировка...\n";
		double a;
		int z = 0;
		for (i = 0; i < (x - 1); i++)
		{
			a = i;
			a = (a / x) * 100;

			if (a > z)
			{
				z++;
				cout << "\n" << z << "%";
			}

			if (mas2[i] != "0")
			{
				for (j = (i + 1); j < x; j++)
				{
					if (mas2[i] == mas2[j])
					{
						mas2[j] = "0";
					}
				}
			}
		}
		j = 0;
		for (i = 0; i < x; i++)
		{
			if (mas2[i] != "0")
			{
				mas1[j] = mas2[i];
				j++;
			}
		}
	}
	else
	{
		j = 0;
		for (i = 0; i < x; i++)
		{
			mas1[j] = mas2[i];
			j++;		
		}
	}
	string *mas = new string[j];

	for (i = 0; i < j; i++)
	{
		mas[i] = mas1[i];
	}

	cout << "\n\nКоличество уникальных комбинаций = " << j <<"\n\n";

//поиск соответсвий в файле (database.txt)
	i = 0; 
	n = 125717;
	string s;
	string *data = new string[n];
	ifstream file("database.txt");
	while (getline(file, s))
	{
		data[i] = s;
		i++;
	}
	file.close();

	x = j;
	cout << "Вывод:";
	for (i = 0; i < x; i++)
	{
		for (j = 0; j < n; j++)
		{
			if (mas[i] == data[j])
			{
				cout << "\n" << mas[i];
			}
		}
	}


	system("pause");
}
